"""added Subject and Group tables

Revision ID: 1c9ddeee3e8b
Revises: c31a9f1fb6d6
Create Date: 2022-01-30 02:32:50.353063

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '1c9ddeee3e8b'
down_revision = 'c31a9f1fb6d6'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('subject',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('created_on', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_on', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('name', sa.String(length=60), nullable=False),
    sa.Column('subject_date', sa.Date(), nullable=False),
    sa.Column('credits', sa.SmallInteger(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('subject_teacher',
    sa.Column('subject_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('teacher_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.ForeignKeyConstraint(['subject_id'], ['subject.id'], ),
    sa.ForeignKeyConstraint(['teacher_id'], ['teacher.id'], ),
    sa.PrimaryKeyConstraint('subject_id', 'teacher_id')
    )
    op.create_table('group',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('created_on', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_on', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('name', sa.String(length=60), nullable=False),
    sa.Column('group_date', sa.Date(), nullable=False),
    sa.Column('credits_per_student', sa.SmallInteger(), nullable=False),
    sa.Column('curator_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('specialty_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.ForeignKeyConstraint(['curator_id'], ['teacher.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['specialty_id'], ['specialty.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('subject_specialty',
    sa.Column('subject_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('specialty_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.ForeignKeyConstraint(['specialty_id'], ['specialty.id'], ),
    sa.ForeignKeyConstraint(['subject_id'], ['subject.id'], ),
    sa.PrimaryKeyConstraint('subject_id', 'specialty_id')
    )
    op.create_table('group_student',
    sa.Column('group_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('student_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.ForeignKeyConstraint(['group_id'], ['group.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['student.id'], ),
    sa.PrimaryKeyConstraint('group_id', 'student_id')
    )
    op.create_table('subject_group',
    sa.Column('subject_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('group_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.ForeignKeyConstraint(['group_id'], ['group.id'], ),
    sa.ForeignKeyConstraint(['subject_id'], ['subject.id'], ),
    sa.PrimaryKeyConstraint('subject_id', 'group_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('subject_group')
    op.drop_table('group_student')
    op.drop_table('subject_specialty')
    op.drop_table('group')
    op.drop_table('subject_teacher')
    op.drop_table('subject')
    # ### end Alembic commands ###
